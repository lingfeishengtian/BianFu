; ModuleID = 'asdf'
source_filename = "asdf"

@0 = private unnamed_addr constant [13 x i8] c"hello world!\00", align 1
@1 = private unnamed_addr constant [14 x i8] c"Value is %d!\0A\00", align 1
@2 = private unnamed_addr constant [21 x i8] c"STRING print is %s!\0A\00", align 1

define void @main() {
entrypoint:
  %a = alloca i8
  store i8 2, i8* %a
  %0 = load i8, i8* %a
  %1 = alloca [3 x i8]
  %2 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i8 0, i8 0
  store i8 72, i8* %2
  %3 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i8 0, i8 1
  store i8 72, i8* %3
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1, i32 0, i32 0), i8 2)
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @0, i32 0, i32 0))
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @2, i32 0, i32 0), [3 x i8]* %1)
  ret void
}

declare i32 @printf(i8*, ...)